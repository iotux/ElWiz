---
# The IP address or hostname
# of your favorite MQTT broker
mqttBroker: localhost
brokerPort: 1883

# Enter credentials if needed
userName:
password:

# meterModel can be kaifa, aidon or kamstrup
meterModel: kaifa

# Tibber Pulse listening topic
topic: tibber

# ElWiz publishing topics
pubTopic: meter/ams
pubStatus: meter/status
pubNotice: meter/notice

# Publish options for list 1, 2, 3 & status
list1Retain: false
list1Qos: 0
list2Retain: false
list2Qos: 0
list3Retain: true
list3Qos: 1

statusRetain: false
statusQos: 0

# ElWiz event messages
willMessage: ElWiz has left the building
greetMessage: ElWiz is performing

# Tibber Pulse event messages
onlineMessage: Pulse is talking
offlineMessage: Pulse is quiet

# Debug mode at startup
DEBUG: true
debugTopic: debug/hex

# Republish mode at startup
# DEPRECATED. Use publish modes instead
REPUBLISH: true

# User has production (solar panels)
hasProduction: false

#############################################
# Storage and cache
# cache
#  - file
#  - redis
#
# storage
#  - mongodb
#  - mariadb
#  - custom
#  - none
#
cacheType: file
storage: none

#############################################
# Possible publishing modes
#
# hassPublish
# basicPublish
# customPublish
#
publisher: hassPublish

#############################################
# Publish to Home Assistant (defaults to TRUE)?
hassPublish: true
# Home Assistant sensor base topic (defaults to "elwiz/sensor")
haBaseTopic: elwiz/sensor

# Don't change the following topic unless you
# have changed the way HomeAssistant read
# MQTT messages
haAnnounceTopic: homeassistant/sensor/ElWiz

##################################################
# The rest of the configuration is only valid for
# the "fetchprices" and "fetch-eu-prices" programs

# For the "fetch-eu-prices" program, an "access token"
# is needed from "https://transparency.entsoe.eu.
# You will get this token by writing an email to
# "transparency@entsoe.eu" and ask for a token
#
priceAccessToken: <insert your token here>

# base-URL for fetch-eu-prices.js
entsoeBaseUrl: "https://web-api.tp.entsoe.eu/api"

# Base-URL for fetchprices.js
nordpoolBaseUrl: "https://www.nordpoolgroup.com/api/marketdata/page/10"

# URL for fetc-eu-currencies.js
currencyUrl: "https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml"


# Days to keep data files
# Files older tham "keepDays" are deleted
keepDays: 7

# Windows and Docker users without cron
# want to use the "node-schedule" module.
# Set the following to "true" if that is the case.
# Cron users should set it to "false".
runNodeSchedule: true

# The following recommended scheduling will
# try to fetch prices <scheduleMinutes> minutes
# past the "scheduleHours" for the "fetchprices"
# program. Likewise, the <scheduleEuMinutes> is
# for the "fetch-eu-prices" program.
# The same scheduling is recommended for cron users
# According to information flfoating around, the prices
# are available about 13:00 CET/CEST from
# Nord Pool, while the prices from ENTSO-E
# is available about 14:00 CET/CEST
# The scheduler will retry until successful
# within the "scheduleHours"
scheduleHours: [14,16,18,20,22]
scheduleMinutes: [15]
scheduleEuMinutes: [45]

# Where to store currency and price data
# relative to the program directory
savePath: ./data
currencyFilePath: ./data/currencies
priceFilePath: ./data/prices

# Your local supplier's price information
# Setting computePrices false for
# only returning naked spot prices (no VAT)
computePrices: true
calculateCost: true

# Topic for sending prices as MQTT message
priceTopic: elwiz/prices
priceTopicRetain: true
priceTopicQos: 0

# Use the same currency as your local supplier
# The following currencies are available:
# EUR, SEK, NOK, DKR
priceCurrency: NOK

# Price for the following regions are
# available in EUR, SEK, NOK, DKR.
#
# Sweden, Finland, Denmark
# [SE1, SE2, SE3, SE4, FI, DK1, DK2]
# [  1,   2,   3,   4,  5,   6,   7]
#
# Norway
# [Oslo, Kr.sand, Bergen, Molde, Tr.heim, Tromsø]
# [   8,       9,     10,    11,      12,     13]
#
# Estonia, Latvia, Lithuania
# [EE, LV, LT]
# [14, 15, 16]
#
# EUR prices are available for the following regions
# [AT, BE, DE-LU, FR, NL]
# [17, 18,    19, 20, 21]
# Find your region and insert here.
# Ask your local supplier if in doubt.
priceRegion: 8

# Those who use the "fetch-eu-prices" program
# need to set the correct zone here.
# See the "entsoezones.yaml" file
regionCode: NO3

########################################
# Electric power price calculation
# Change the following values according
# to your electric power supplier's invoice
# Different rate models may require changes to program
# Suppliers usually adds a fixed daily OR monthly price
# Use the ones that apply and set the others to 0.0
supplierKwhPrice: 0.0
supplierDayPrice: 0.0
supplierMonthPrice: 0.0
supplierVatPercent: 0.0

# Spot market prices are without VAT
# A VAT percent is usually needed for private households
# Change accordingly
spotVatPercent: 25.0

# Network cost
# Network fixed prices
gridVatPercent: 0.0
gridKwhPrice: 0.0
gridMonthPrice: 0.0
gridDayPrice: 0.0

#
energyTax: 0.0
energyDayPrice: 0.0   # Added price between dayHoursStart and dayHoursEnd
energyNightPrice: 0.0 # Added price between dayHoursEnd and dayHoursStart
energyDayKwhPrice: 0.0   # Added price between dayHoursStart and dayHoursEnd
energyNightKwhPrice: 0.0 # Added price between dayHoursEnd and dayHoursStart

dayHoursStart: 06:00
dayHoursEnd: 22:00

# Network reward per kWh production
gridKwhReward: 0.0

# The following values are specific for Norwegian users
topHoursSize: 12
topHoursCount: 3

capacity0-2: 0.0
capacity2-5: 0.0
capacity5-10: 0.0
capacity10-15: 0.0
capacity15-20: 0.0
capacity20-25: 0.0

# Mostly for developers
amsDebug: true
storageDebug: true